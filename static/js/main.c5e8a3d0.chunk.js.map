{"version":3,"sources":["components/inffectedCountry/InffectedCountryCard.js","components/inffectedCountry/InffectedCountryList.js","components/inffectedCountry/InffectedCountryMap.js","App.js","index.js"],"names":["InffectedCountryCard","urlFlag","country_name","cases","deaths","total_recovered","Card","CardHeader","avatar","Avatar","src","title","CardContent","Grid","style","textAlign","container","borderRight","sm","xs","lg","item","display","flexDirection","justifyContent","InffectedCountryList","inffectedCountries","updatedAt","Container","marginBottom","color","marginTop","spacing","map","country","key","FlagPin","Chip","label","InffectedCountryMap","height","width","bootstrapURLKeys","defaultCenter","lat","lng","defaultZoom","latlng","App","useState","setinffectedCountries","setUpdatedAt","useEffect","a","fetch","headers","inffectedCountriesResponse","allCountries","Countries","ok","json","countries_stat","statistic_taken_at","stat","countryFound","find","name","toUpperCase","altSpellings","findIndex","alt","flag","fetchData","overflowY","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c5e8a3d0.chunk.js","sourcesContent":["import React from \"react\";\nimport { Card, CardHeader, Avatar, CardContent, Grid } from \"@material-ui/core\";\n\nexport default function InffectedCountryCard({\n  urlFlag,\n  country_name,\n  cases,\n  deaths,\n  total_recovered,\n}) {\n  if (!country_name) {\n    return null;\n  }\n  return (\n    <Card>\n      <CardHeader avatar={<Avatar src={urlFlag} />} title={country_name} />\n      <CardContent>\n        <Grid style={{ textAlign: \"center\" }} container>\n          <Grid\n            style={{ borderRight: \"solid #0E5077\" }}\n            sm={4}\n            xs={4}\n            lg={4}\n            item\n          >\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                justifyContent: \"center\",\n              }}\n            >\n              <span>{cases}</span>\n              <span>Cases</span>\n            </div>\n          </Grid>\n          <Grid\n            style={{ borderRight: \"solid #0E5077\" }}\n            sm={4}\n            xs={4}\n            lg={4}\n            item\n          >\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                justifyContent: \"center\",\n              }}\n            >\n              <span>{deaths}</span>\n              <span>Deaths</span>\n            </div>\n          </Grid>\n          <Grid sm={4} xs={4} lg={4} item>\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                justifyContent: \"center\",\n              }}\n            >\n              <span>{total_recovered}</span>\n              <span>Total Recovered</span>\n            </div>\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport { Container, Grid } from \"@material-ui/core\";\n\nimport InffectedCountryCard from \"./InffectedCountryCard\";\n\nexport default function InffectedCountryList({\n  inffectedCountries,\n  updatedAt,\n}) {\n  return (\n    <Container>\n      <h1 style={{ marginBottom: \"0\" }}>Infected countries</h1>\n      <p style={{ color: \"#0e5077\", marginTop: \"0\" }}>updated at {updatedAt}</p>\n      <Grid spacing={1} container>\n        {inffectedCountries.map((country) => (\n          <Grid key={country.country_name} lg={6} xs={12} sm={12} item>\n            <InffectedCountryCard {...country} />\n          </Grid>\n        ))}\n      </Grid>\n    </Container>\n  );\n}\n","import React from \"react\";\nimport GoogleMapReact from \"google-map-react\";\nimport { Avatar, Chip } from \"@material-ui/core\";\n\nconst FlagPin = ({ urlFlag, cases }) => (\n  <Chip avatar={<Avatar src={urlFlag} />} label={`${cases} cases`} />\n);\n\nexport default function InffectedCountryMap({ inffectedCountries }) {\n  return (\n    <div style={{ height: \"100%\", width: \"100%\" }}>\n      <GoogleMapReact\n        bootstrapURLKeys={{ key: \"\" }}\n        defaultCenter={{ lat: 0, lng: 0 }}\n        defaultZoom={1}\n      >\n        {inffectedCountries.map(country =>\n          country.latlng ? (\n            <FlagPin\n              key={country.country_name}\n              lat={country.latlng[0]}\n              lng={country.latlng[1]}\n              cases={country.cases}\n              urlFlag={country.urlFlag}\n            />\n          ) : null,\n        )}\n      </GoogleMapReact>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { Grid } from '@material-ui/core';\n\nimport InffectedCountryList from './components/inffectedCountry/InffectedCountryList';\nimport InffectedCountryMap from './components/inffectedCountry/InffectedCountryMap';\nimport Countries from './assets/data/countriesV2.json';\n\nfunction App() {\n\n  let [inffectedCountries, setinffectedCountries] = useState([]);\n  let [updatedAt, setUpdatedAt] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      let inffectedCountriesResponse = await fetch(\n        'https://coronavirus-monitor.p.rapidapi.com/coronavirus/cases_by_country.php',\n        {\n          headers: {\n            'x-rapidapi-host': 'coronavirus-monitor.p.rapidapi.com',\n            'x-rapidapi-key': '30b396f453mshfda9bfeaaa03310p146f1ajsnafc956e2dc74',\n          },\n        },\n      );\n\n      let allCountries = Countries;\n\n      if (inffectedCountriesResponse.ok) {\n        let { countries_stat, statistic_taken_at } = await inffectedCountriesResponse.json();\n        setinffectedCountries(\n          countries_stat.map(stat => {\n            let countryFound = allCountries.find(\n              country =>\n                //country.name.toUpperCase().indexOf(stat.country_name.toUpperCase()) !== -1 ||\n                country.name.toUpperCase() === stat.country_name.toUpperCase() ||\n                country.altSpellings.findIndex(\n                  alt => alt.toUpperCase() === stat.country_name.toUpperCase(),\n                ) !== -1,\n            );\n            if (!countryFound) countryFound = {};\n            return {\n              ...stat,\n              urlFlag: countryFound.flag,\n              latlng: countryFound.latlng,\n            };\n          }),\n        );\n\n        setUpdatedAt(statistic_taken_at);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <Grid container>\n      <Grid style={{ height: '100vh', overflowY: 'auto' }} lg={6} sm={12} item>\n        <InffectedCountryList inffectedCountries={inffectedCountries} updatedAt={updatedAt}/>\n      </Grid>\n      <Grid style={{ height: '100vh' }} lg={6} sm={12} item>\n        <InffectedCountryMap inffectedCountries={inffectedCountries}/>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}